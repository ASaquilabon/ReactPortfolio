{"version":3,"file":"use-observer.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\ntype ObserverType = {\n  threshold: number,\n  rootMargin?: string,\n};\n\nexport function useObserver({ threshold, rootMargin = '0px' }: ObserverType) {\n\n  const [inView, setInView] = useState<boolean>();\n  const ref = useRef<any>();\n  const iObserverRef = useRef<IntersectionObserver>();\n\n  useEffect(() => {\n    let options = {\n      root: null,\n      rootMargin: rootMargin,\n      threshold: threshold\n    }\n    \n    iObserverRef.current = new IntersectionObserver((entries) => {\n      if (inView !== entries[0].isIntersecting) {\n        setInView(entries[0].isIntersecting);\n      }\n    }, options);\n  }, []);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (ref.current) iObserverRef.current.observe(ref.current);\n    return () => {\n      if (ref.current) {\n        // @ts-ignore\n        iObserverRef.current.unobserve(ref.current);\n        // @ts-ignore\n        iObserverRef.current.disconnect();\n      }\n    }\n  }, [ref.current])\n\n  return { inView, ref };\n}"],"names":["useObserver","threshold","rootMargin","useState","inView","setInView","ref","useRef","iObserverRef","useEffect","options","root","current","IntersectionObserver","entries","isIntersecting","observe","unobserve","disconnect"],"mappings":";;SAOgBA;MAAcC,iBAAAA;6BAAWC;MAAAA,0CAAa;;kBAExBC,QAAQ;MAA7BC;MAAQC;;AACf,MAAMC,GAAG,GAAGC,MAAM,EAAlB;AACA,MAAMC,YAAY,GAAGD,MAAM,EAA3B;AAEAE,EAAAA,SAAS,CAAC;AACR,QAAIC,OAAO,GAAG;AACZC,MAAAA,IAAI,EAAE,IADM;AAEZT,MAAAA,UAAU,EAAEA,UAFA;AAGZD,MAAAA,SAAS,EAAEA;AAHC,KAAd;AAMAO,IAAAA,YAAY,CAACI,OAAb,GAAuB,IAAIC,oBAAJ,CAAyB,UAACC,OAAD;AAC9C,UAAIV,MAAM,KAAKU,OAAO,CAAC,CAAD,CAAP,CAAWC,cAA1B,EAA0C;AACxCV,QAAAA,SAAS,CAACS,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAZ,CAAT;AACD;AACF,KAJsB,EAIpBL,OAJoB,CAAvB;AAKD,GAZQ,EAYN,EAZM,CAAT;AAcAD,EAAAA,SAAS,CAAC;AACR;AACA,QAAIH,GAAG,CAACM,OAAR,EAAiBJ,YAAY,CAACI,OAAb,CAAqBI,OAArB,CAA6BV,GAAG,CAACM,OAAjC;AACjB,WAAO;AACL,UAAIN,GAAG,CAACM,OAAR,EAAiB;AACf;AACAJ,QAAAA,YAAY,CAACI,OAAb,CAAqBK,SAArB,CAA+BX,GAAG,CAACM,OAAnC,EAFe;;AAIfJ,QAAAA,YAAY,CAACI,OAAb,CAAqBM,UAArB;AACD;AACF,KAPD;AAQD,GAXQ,EAWN,CAACZ,GAAG,CAACM,OAAL,CAXM,CAAT;AAaA,SAAO;AAAER,IAAAA,MAAM,EAANA,MAAF;AAAUE,IAAAA,GAAG,EAAHA;AAAV,GAAP;AACD;;;;"}